(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>m});var r=t(354),o=t.n(r),a=t(314),i=t.n(a),c=t(417),s=t.n(c),d=new URL(t(273),t.b),A=new URL(t(732),t.b),p=i()(o()),l=s()(d),u=s()(A);p.push([n.id,`@font-face {\n    font-family: 'Honya';\n    src: url(${l}) format('truetype');\n}\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    background-image: url(${u});\n    background-position: center;\n    background-size: cover;\n    background-attachment: fixed; \n    font-family: 'Honya', sans-serif;\n}\n\nheader {\n    width: 400px;\n    margin: 40px auto;\n    /* border: 1px solid red; */\n}\n\nnav {\n    display: flex;\n    justify-content: space-around;\n}\n\nnav button {\n    font-family: 'Honya', sans-serif;\n    font-weight: 800;\n    font-size: 1.2rem;\n    width: 100px;\n    height: 40px;\n    border: none;\n    border-radius: 3px;\n}\n\nnav button:hover {\n    background-color: rgb(150, 150, 150);\n    cursor: pointer;\n}\n\n.content {\n    margin: 80px auto;\n    background-color: rgb(255, 255, 255);\n    width: 800px;\n    border-radius: 7px;\n    padding: 40px;\n}\n\n.content h1 {\n    margin-bottom: 30px;\n    font-size: 3.5rem;\n}\n\n.content h2 {\n    margin-bottom: 30px;\n    width: fit-content;\n    margin: 0 auto 30px;\n    font-size: 2.5rem;\n    text-decoration:dotted;\n}\n\n.content h3 {\n    font-size: 1.5rem;\n}\n\n.menu-header, .contact-heading {\n    width: fit-content;\n    margin: 0 auto;\n}\n\n.content p {\n    font-size: 1.12rem;\n    font-family:'Arial Narrow', Arial, sans-serif;\n    font-style: italic;\n}\n\n.content .desc {\n    font-size: 1.5rem;\n    font-weight: 400;\n    font-style: normal;\n    font-family:'Honya', sans-serif;\n}\n\n.menu-item {\n    margin: 0 auto 20px;\n    width: 500px;\n    border-bottom: 2px dotted black;\n}\n\n.menu-item p {\n    margin-bottom: 10px;\n    margin-top: 10px;\n}\n\n.menu-item .price {\n    font-weight: bold;\n}\n\n.contact-card {\n    margin: 0 auto 30px;\n    width: 500px;\n}\n\nfooter {\n    font-family: sans-serif;\n    background-color: #f8f8f8;\n    padding: 20px;\n    text-align: center;\n    font-size: 14px;\n    color: #555;\n    border-top: 1px solid #e7e7e7;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,+DAAsD;AAC1D;AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,yDAA2C;IAC3C,2BAA2B;IAC3B,sBAAsB;IACtB,4BAA4B;IAC5B,gCAAgC;AACpC;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI,gCAAgC;IAChC,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,oCAAoC;IACpC,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,oCAAoC;IACpC,YAAY;IACZ,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,6CAA6C;IAC7C,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,+BAA+B;AACnC;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,+BAA+B;AACnC;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,yBAAyB;IACzB,aAAa;IACb,kBAAkB;IAClB,eAAe;IACf,WAAW;IACX,6BAA6B;AACjC",sourcesContent:["@font-face {\r\n    font-family: 'Honya';\r\n    src: url('fonts/Honya-Regular.ttf') format('truetype');\r\n}\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    background-image: url(\"images/bgImage.jpg\");\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-attachment: fixed; \r\n    font-family: 'Honya', sans-serif;\r\n}\r\n\r\nheader {\r\n    width: 400px;\r\n    margin: 40px auto;\r\n    /* border: 1px solid red; */\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n\r\nnav button {\r\n    font-family: 'Honya', sans-serif;\r\n    font-weight: 800;\r\n    font-size: 1.2rem;\r\n    width: 100px;\r\n    height: 40px;\r\n    border: none;\r\n    border-radius: 3px;\r\n}\r\n\r\nnav button:hover {\r\n    background-color: rgb(150, 150, 150);\r\n    cursor: pointer;\r\n}\r\n\r\n.content {\r\n    margin: 80px auto;\r\n    background-color: rgb(255, 255, 255);\r\n    width: 800px;\r\n    border-radius: 7px;\r\n    padding: 40px;\r\n}\r\n\r\n.content h1 {\r\n    margin-bottom: 30px;\r\n    font-size: 3.5rem;\r\n}\r\n\r\n.content h2 {\r\n    margin-bottom: 30px;\r\n    width: fit-content;\r\n    margin: 0 auto 30px;\r\n    font-size: 2.5rem;\r\n    text-decoration:dotted;\r\n}\r\n\r\n.content h3 {\r\n    font-size: 1.5rem;\r\n}\r\n\r\n.menu-header, .contact-heading {\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n}\r\n\r\n.content p {\r\n    font-size: 1.12rem;\r\n    font-family:'Arial Narrow', Arial, sans-serif;\r\n    font-style: italic;\r\n}\r\n\r\n.content .desc {\r\n    font-size: 1.5rem;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    font-family:'Honya', sans-serif;\r\n}\r\n\r\n.menu-item {\r\n    margin: 0 auto 20px;\r\n    width: 500px;\r\n    border-bottom: 2px dotted black;\r\n}\r\n\r\n.menu-item p {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.menu-item .price {\r\n    font-weight: bold;\r\n}\r\n\r\n.contact-card {\r\n    margin: 0 auto 30px;\r\n    width: 500px;\r\n}\r\n\r\nfooter {\r\n    font-family: sans-serif;\r\n    background-color: #f8f8f8;\r\n    padding: 20px;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    color: #555;\r\n    border-top: 1px solid #e7e7e7;\r\n}\r\n"],sourceRoot:""}]);const m=p},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],A=a[d]||0,p="".concat(d," ").concat(A);a[d]=A+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var m=o(u,r);r.byIndex=c,e.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),d=0;d<a.length;d++){var A=t(a[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=s}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},273:(n,e,t)=>{n.exports=t.p+"938d2fe906a07fa44e1d.ttf"},732:(n,e,t)=>{n.exports=t.p+"5fedd26924b1f5520f6a.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{const n=function(){const n=document.querySelector("#content"),e=document.createElement("h1"),t=document.createElement("p");t.className="desc",e.innerText="Cupcake Cove",t.innerText="At Cupcake Cove, every bite is a moment of pure joy. \n    We handcraft each cupcake with love and the finest locally sourced \n    ingredients. From classic chocolate and vanilla to seasonal fruit \n    creations, there's a cupcake for every taste.\n    \n    ",n.appendChild(e),n.appendChild(t)},e=document.querySelector("#content"),r={"Specialty Cupcakes":[{name:"Salted Caramel Dream",description:"Caramel cupcake topped with salted caramel buttercream and a caramel drizzle.",price:3.99},{name:"Peanut Butter Paradise",description:"Peanut butter cupcake with a creamy peanut butter frosting and a chocolate drizzle.",price:4.79},{name:"Cookies and Cream",description:"Oreo-infused cupcake with a cookies and cream frosting, topped with a mini Oreo.",price:3.99}],"Classic Cupcakes":[{name:"Velvety Vanilla Delight",description:"A classic vanilla cupcake with a smooth buttercream frosting.",price:2.99},{name:"Chocolate Bliss",description:"Rich, moist chocolate cupcake topped with decadent chocolate ganache.",price:3.49},{name:"Red Velvet Romance",description:"Traditional red velvet cupcake with a tangy cream cheese frosting.",price:3.29},{name:"Strawberry Shortcake",description:"Light strawberry-infused cupcake with a whipped cream topping and fresh strawberries.",price:3.99}],"Seasonal Cupcakes":[{name:"Pumpkin Spice Magic",description:"Spiced pumpkin cupcake with a maple cream cheese frosting (available in fall).",price:3.79},{name:"Peppermint Wonderland",description:"Chocolate cupcake with peppermint frosting and crushed candy cane topping (available in winter).",price:3.59},{name:"Berry Burst",description:"Mixed berry cupcake with a berry compote filling and vanilla frosting (available in summer).",price:3.89}],Drinks:[{name:"Artisan Coffee",description:"Freshly brewed coffee from locally roasted beans.",price:3.49},{name:"Gourmet Hot Chocolate",description:"Rich, creamy hot chocolate topped with whipped cream and chocolate shavings.",price:4.99},{name:"Herbal Teas",description:"A variety of soothing herbal teas.",price:2.99}]};let o=0;const a=document.querySelector("#content"),i=[{name:"Manager",contact:"555-555-5554",email:"totallyRealEmail@notFake.com"},{name:"Chef",contact:"555-555-5555",email:"perfectlyRealEmail@notFake.com"}];var c=t(72),s=t.n(c),d=t(825),A=t.n(d),p=t(659),l=t.n(p),u=t(56),m=t.n(u),f=t(540),h=t.n(f),C=t(113),g=t.n(C),B=t(208),b={};b.styleTagTransform=g(),b.setAttributes=m(),b.insert=l().bind(null,"head"),b.domAPI=A(),b.insertStyleElement=h(),s()(B.A,b),B.A&&B.A.locals&&B.A.locals;const y=document.querySelector("#content");y.classList.add("content");const v=document.querySelector(".home-btn"),I=document.querySelector(".menu-btn"),x=document.querySelector(".about-btn");n(),console.log("Loaded"),I.addEventListener("click",(()=>{y.replaceChildren(),function(){o=0;const n=document.createElement("h1");n.classList.add("menu-header"),n.innerText="Menu",e.appendChild(n),Object.keys(r).forEach((n=>{!function(n,t){const r=document.createElement("div");r.className="menu-category-"+ ++o,e.appendChild(r);const a=document.createElement("h2");a.innerText=n,r.appendChild(a),t.forEach((n=>{const e=document.createElement("div");e.className="menu-item",r.appendChild(e);const t=document.createElement("h3");t.innerText=n.name;const o=document.createElement("p");o.innerText=n.description;const a=document.createElement("p");a.className="price",a.innerText=`$${n.price}`,e.appendChild(t),e.appendChild(o),e.appendChild(a)}))}(n,r[n])}))}()})),v.addEventListener("click",(()=>{y.replaceChildren(),n()})),x.addEventListener("click",(()=>{y.replaceChildren(),function(){const n=document.createElement("h1");n.classList.add("contact-heading"),n.innerText="Contact Us",a.appendChild(n),i.forEach((n=>{!function(n){const e=document.createElement("div");e.className="contact-card",a.appendChild(e);const t=document.createElement("h3");t.innerText=n.name;const r=document.createElement("p");r.innerText=n.contact;const o=document.createElement("p");o.innerText=n.email,e.appendChild(t),e.appendChild(r),e.appendChild(o)}(n)}))}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,